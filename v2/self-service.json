{"collection":{"item":[{"name":"Authentication APIs","description":"These APIs allow `sysapp` and `userapp` to authenticate themselves or their end users with fabric Identity. The objective of these APIs is to return an access token to apps, which can then be used to invoke other fabric APIs (like OMS, PIM etc).","item":[{"id":"953f9268-03e0-44bb-ac34-43c83928ffc9","name":"Authorize `userapp` with and without PKCE","request":{"name":"Authorize `userapp` with and without PKCE","description":{"content":"Use this API to authenticate `userapp`(s) with fabric Identity. This API is not needed for `sysapp` authentication (see the `/token` API instead). The immediate response of this operation would be a browser re-direct to the hosted login page configured in fabric Identity. Once the end user is authenticated on the hosted login page, fabric Identity will perform a redirect back to the `userapp` on the provided `redirect_uri`. This API can be used for both authorization code flow with and without PKCE.","type":"text/plain"},"url":{"path":["oauth2","default","v1","authorize"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"description":{"content":"(Required) Client ID of the `userapp`","type":"text/plain"},"key":"client_id","value":"<string>"},{"disabled":false,"description":{"content":"(Required) The type of the response expected. This should always be set to `code` (as per OAuth 2.0 grant type , refer https://datatracker.ietf.org/doc/html/rfc6749#page-19)","type":"text/plain"},"key":"response_type","value":"<string>"},{"disabled":false,"description":{"content":"(Required) The scope of the API call. This should always be set to `openid` (as per OpenID Connect standard - https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)","type":"text/plain"},"key":"scope","value":"<string>"},{"disabled":false,"description":{"content":"(Required) The redirect uri of the `userapp` that fabric Identity would redirect the user once the login is successful. This uri should be hosted by `userapp` and as part of the redirect would receive the auth code (as `code` query parameter) which can then be exchanged for the access token (see `/token`).","type":"text/plain"},"key":"redirect_uri","value":"<string>"},{"disabled":false,"description":{"content":"(Required) A random string created by `userapp` used to maintain state between the request and the callback. This helps mitigate CSRF when it is cryptographically derived from a browser cookie denoting the user/session.","type":"text/plain"},"key":"state","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required only when using authorization code flow with PKCE.</b> A code challenge method supported by PKCE specification. fabric Identity only supports the value of `S256` (for more information - https://datatracker.ietf.org/doc/html/rfc7636#section-4.2). This parameter is mandatory for authorization code flow with PKCE and is not required for the regular authorization code flow.","type":"text/plain"},"key":"code_challenge_method","value":"<string>"},{"disabled":false,"description":{"content":"(Required) <b>Required only when using authorization code flow with PKCE.</b> The code challenge created by the `userapp` as per the specification on PKCE - https://datatracker.ietf.org/doc/html/rfc7636#section-4.2.","type":"text/plain"},"key":"code_challenge","value":"<string>"}],"variable":[]},"method":"GET","body":{},"auth":null},"response":[{"id":"2a29a3bd-fa08-4c48-8ba9-ede4798c00ac","name":"Found. A successful response to this API would re-direct the user to the hosted login page provided by the fabric Identity. Once the user successfully logs in, fabric Identity would re-direct the client back to the `redirect_uri` hosted on the `userapp` with the authorization code (as query parameter `code`) and the state (as query parameter `state`). The `state`` parameter in the callback would be the same value as sent in the request.","originalRequest":{"url":{"path":["oauth2","default","v1","authorize"],"host":["{{baseUrl}}"],"query":[{"disabled":false,"description":{"content":"(Required) Client ID of the `userapp`","type":"text/plain"},"key":"client_id","value":"<string>"},{"disabled":false,"description":{"content":"(Required) The type of the response expected. This should always be set to `code` (as per OAuth 2.0 grant type , refer https://datatracker.ietf.org/doc/html/rfc6749#page-19)","type":"text/plain"},"key":"response_type","value":"<string>"},{"disabled":false,"description":{"content":"(Required) The scope of the API call. This should always be set to `openid` (as per OpenID Connect standard - https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)","type":"text/plain"},"key":"scope","value":"<string>"},{"disabled":false,"description":{"content":"(Required) The redirect uri of the `userapp` that fabric Identity would redirect the user once the login is successful. This uri should be hosted by `userapp` and as part of the redirect would receive the auth code (as `code` query parameter) which can then be exchanged for the access token (see `/token`).","type":"text/plain"},"key":"redirect_uri","value":"<string>"},{"disabled":false,"description":{"content":"(Required) A random string created by `userapp` used to maintain state between the request and the callback. This helps mitigate CSRF when it is cryptographically derived from a browser cookie denoting the user/session.","type":"text/plain"},"key":"state","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required only when using authorization code flow with PKCE.</b> A code challenge method supported by PKCE specification. fabric Identity only supports the value of `S256` (for more information - https://datatracker.ietf.org/doc/html/rfc7636#section-4.2). This parameter is mandatory for authorization code flow with PKCE and is not required for the regular authorization code flow.","type":"text/plain"},"key":"code_challenge_method","value":"<string>"},{"disabled":false,"description":{"content":"(Required) <b>Required only when using authorization code flow with PKCE.</b> The code challenge created by the `userapp` as per the specification on PKCE - https://datatracker.ietf.org/doc/html/rfc7636#section-4.2.","type":"text/plain"},"key":"code_challenge","value":"<string>"}],"variable":[]},"method":"GET","body":{}},"status":"Found","code":302,"header":[],"cookie":[],"_postman_previewlanguage":"text"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}},{"id":"ae1f3803-8736-4fb7-9cb3-c58f81e955c6","name":"Fetch access token","request":{"name":"Fetch access token","description":{"content":"This API allows `userapp` and `sysapp` to fetch access tokens. For `userapp`, use this API after the `/authorize` API and the subsequent callback. For `userapp` this endpoint supports generation of access token from authorization code or from refresh token, sent in the previous `authorize` endpoint's callback. For `sysapp` this API can directly be used to get an access token, no prior `/authorize` end point call is needed.<br/><b><span style='color: red'>NOTE: Fetching a token for a `sysapp` via the browser on our developer portal WILL NOT WORK as browser requests to the token endpoint must use PKCE.</span></b> Instead, send the request through a server side/native method and ensure the 'Origin' header is not present.","type":"text/plain"},"url":{"path":["oauth2",":authServerId","v1","token"],"host":["{{baseUrl}}"],"query":[],"variable":[{"type":"any","value":"<string>","key":"authServerId","disabled":false,"description":{"content":"(Required) Use `default` for `userapp` flows. For `sysapp`, use the tenant specific server id provided by fabric Identity (see Getting Started).","type":"text/plain"}}]},"header":[{"key":"Content-Type","value":"application/x-www-form-urlencoded"},{"key":"Accept","value":"application/json"}],"method":"POST","body":{"mode":"urlencoded","urlencoded":[{"disabled":false,"description":{"content":"(Required) <b>Required for all authentication flows and app types.</b> Set to `authorization_code` for `userapp` (for both authorization code flow with and without PKCE). Set to `client_credentials` when using for `sysapp`.","type":"text/plain"},"key":"grant_type","value":"authorization_code"},{"disabled":false,"description":{"content":"<b>Required only for `userapp` and authorization code flow with PKCE.</b>","type":"text/plain"},"key":"client_id","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required only for `userapp` and authorization code flow with PKCE.</b>","type":"text/plain"},"key":"client_secret","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required for `userapp` with both authorization code flow with and without PKCE.</b> URL encoded `redirect_uri` sent by the `userapp` in the previous `/authorize` call.","type":"text/plain"},"key":"redirect_uri","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required only for `userapp` and authorization code flow with PKCE.</b> Code verifier using for deriving the `code_challenge` sent in the `/authorize` call. Refer to https://datatracker.ietf.org/doc/html/rfc7636#section-4.2 for more details","type":"text/plain"},"key":"code_verifier","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required for `userapp` with both authorization code flow with and without PKCE.</b> Authorization code received as part of the callback response to the `/authorize` call.","type":"text/plain"},"key":"code","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required only for `sysapp`.</b> Value should always be set to `s2s`.","type":"text/plain"},"key":"scope","value":"s2s"}]},"auth":null},"response":[{"id":"398268b7-1de5-4af5-adb8-12ebe9a385d9","name":"Access token response","originalRequest":{"url":{"path":["oauth2",":authServerId","v1","token"],"host":["{{baseUrl}}"],"query":[],"variable":[]},"header":[{"key":"Content-Type","value":"application/x-www-form-urlencoded"},{"key":"Accept","value":"application/json"}],"method":"POST","body":{"mode":"urlencoded","urlencoded":[{"disabled":false,"description":{"content":"(Required) <b>Required for all authentication flows and app types.</b> Set to `authorization_code` for `userapp` (for both authorization code flow with and without PKCE). Set to `client_credentials` when using for `sysapp`.","type":"text/plain"},"key":"grant_type","value":"authorization_code"},{"disabled":false,"description":{"content":"<b>Required only for `userapp` and authorization code flow with PKCE.</b>","type":"text/plain"},"key":"client_id","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required only for `userapp` and authorization code flow with PKCE.</b>","type":"text/plain"},"key":"client_secret","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required for `userapp` with both authorization code flow with and without PKCE.</b> URL encoded `redirect_uri` sent by the `userapp` in the previous `/authorize` call.","type":"text/plain"},"key":"redirect_uri","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required only for `userapp` and authorization code flow with PKCE.</b> Code verifier using for deriving the `code_challenge` sent in the `/authorize` call. Refer to https://datatracker.ietf.org/doc/html/rfc7636#section-4.2 for more details","type":"text/plain"},"key":"code_verifier","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required for `userapp` with both authorization code flow with and without PKCE.</b> Authorization code received as part of the callback response to the `/authorize` call.","type":"text/plain"},"key":"code","value":"<string>"},{"disabled":false,"description":{"content":"<b>Required only for `sysapp`.</b> Value should always be set to `s2s`.","type":"text/plain"},"key":"scope","value":"s2s"}]}},"status":"OK","code":200,"header":[{"key":"Content-Type","value":"application/json"}],"body":"{\n  \"token_type\": \"<string>\",\n  \"expires_in\": \"<number>\",\n  \"access_token\": \"<string>\",\n  \"id_token\": \"<string>\",\n  \"scope\": \"<string>\"\n}","cookie":[],"_postman_previewlanguage":"json"}],"event":[],"protocolProfileBehavior":{"disableBodyPruning":true}}]}],"event":[],"variable":[{"key":"customer_name","value":"yourcompany"},{"key":"baseUrl","value":"https://{{customer_name}}.login.fabric.inc"}],"info":{"_postman_id":"39707375-8cb0-40dc-b2f3-f8cfa941ab4c","name":"Authentication v2","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","description":{"content":"fabric Identity APIs to be used by all 3rd party developers to authenticate and obtain access tokens for building commerce applications that integrate with fabric APIs (like OMS, Offers etc.).\n\nContact Support:\n Email: support@fabric.inc","type":"text/plain"}}}}
